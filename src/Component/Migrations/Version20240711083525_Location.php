<?php

declare(strict_types=1);

namespace Stu\Migrations;

use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;
use Override;

final class Version20240711083525_Location extends AbstractMigration
{
    #[Override]
    public function getDescription(): string
    {
        return 'Creates new location entity for class table inheritance of Map and StarSystemMap.';
    }

    #[Override]
    public function up(Schema $schema): void
    {
        $this->clearAllMapAndSystemMapReferences();

        $this->createLocationTable();
        $this->fillLocationTable();
        $this->addLocationReferences();
        $this->fillLocationReferences();
        $this->createLocationInheritance();
        $this->resetMapAndSystemMapReferences();

        $this->removeFieldTypeReferences();

        $this->addSql('ALTER TABLE stu_map DROP CONSTRAINT fk_1eef59fdea6efdcd');
        $this->addSql('DROP INDEX map_layer_idx');
        $this->addSql('DROP INDEX map_coordinate_idx');
        $this->addSql('DROP INDEX coordinates_reverse_idx');
        $this->addSql('DROP INDEX coordinates_idx');
        $this->addSql('ALTER TABLE stu_map DROP cx');
        $this->addSql('ALTER TABLE stu_map DROP cy');
        $this->addSql('ALTER TABLE stu_map DROP layer_id');
    }

    private function createLocationTable(): void
    {
        $this->addSql('CREATE TABLE stu_location (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
                            discr VARCHAR(255) NOT NULL,
                            layer_id INT DEFAULT NULL,
                            cx INT DEFAULT NULL,
                            cy INT DEFAULT NULL,
                            field_id INT NOT NULL,
                            map_id INT,
                            starsystem_map_id INT,
                            PRIMARY KEY(id))');
        $this->addSql('ALTER TABLE stu_location ADD CONSTRAINT FK_E0CD22C3EA6EFDCD FOREIGN KEY (layer_id) REFERENCES stu_layer (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE stu_location ADD CONSTRAINT FK_E0CD22C3443707B0 FOREIGN KEY (field_id) REFERENCES stu_map_ftypes (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('CREATE INDEX IDX_E0CD22C3EA6EFDCD ON stu_location (layer_id)');
        $this->addSql('CREATE INDEX location_coords_idx ON stu_location (layer_id, cx, cy)');
        $this->addSql('CREATE INDEX location_field_type_idx ON stu_location (field_id)');
    }

    private function fillLocationTable(): void
    {
        $this->addSql('INSERT INTO stu_location
                        (map_id, discr, layer_id, cx, cy, field_id)
                        SELECT m.id, \'map\', m.layer_id, m.cx, m.cy, m.field_id
                        FROM stu_map m
                        ORDER BY m.id ASC');

        $this->addSql('INSERT INTO stu_location
                        (starsystem_map_id, discr, layer_id, cx, cy, field_id)
                        SELECT sm.id, \'systemMap\', m.layer_id, m.cx, m.cy, sm.field_id
                        FROM stu_sys_map sm
                        JOIN stu_systems s
                        ON sm.systems_id = s.id
                        LEFT JOIN stu_map m
                        ON m.systems_id = s.id
                        ORDER BY sm.id ASC');

        $this->addSql('CREATE INDEX location_map_idx ON stu_location (map_id)');
        $this->addSql('CREATE INDEX location_system_map_idx ON stu_location (starsystem_map_id)');
    }

    private function addLocationReferences(): void
    {
        //SHIP
        $this->addSql('ALTER TABLE stu_ships ADD location_id INT DEFAULT NULL');
        $this->addSql('ALTER TABLE stu_ships ADD CONSTRAINT FK_A560DD5664D218E FOREIGN KEY (location_id) REFERENCES stu_location (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('CREATE INDEX ship_location_idx ON stu_ships (location_id)');
        //ANOMALY
        $this->addSql('ALTER TABLE stu_anomaly ADD location_id INT DEFAULT NULL');
        $this->addSql('ALTER TABLE stu_anomaly ADD CONSTRAINT FK_A1426D1164D218E FOREIGN KEY (location_id) REFERENCES stu_location (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('CREATE INDEX IDX_A1426D1164D218E ON stu_anomaly (location_id)');
        //BUOY
        $this->addSql('ALTER TABLE stu_buoy ADD location_id INT DEFAULT NULL');
        $this->addSql('ALTER TABLE stu_buoy ADD CONSTRAINT FK_B6DF528964D218E FOREIGN KEY (location_id) REFERENCES stu_location (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('CREATE INDEX IDX_B6DF528964D218E ON stu_buoy (location_id)');
        //FLIGHT_SIG
        $this->addSql('ALTER TABLE stu_flight_sig ADD location_id INT DEFAULT NULL');
        $this->addSql('ALTER TABLE stu_flight_sig ADD CONSTRAINT FK_C789CFE164D218E FOREIGN KEY (location_id) REFERENCES stu_location (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('CREATE INDEX IDX_C789CFE164D218E ON stu_flight_sig (location_id)');
        //TACHYON_SCAN
        $this->addSql('ALTER TABLE stu_tachyon_scan ADD location_id INT DEFAULT NULL');
        $this->addSql('ALTER TABLE stu_tachyon_scan ADD CONSTRAINT FK_1ED54F9464D218E FOREIGN KEY (location_id) REFERENCES stu_location (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('CREATE INDEX IDX_1ED54F9464D218E ON stu_tachyon_scan (location_id)');
    }

    private function clearAllMapAndSystemMapReferences(): void
    {
        //ANOMALY
        $this->addSql('ALTER TABLE stu_anomaly DROP CONSTRAINT fk_a1426d11496dde10');
        $this->addSql('ALTER TABLE stu_anomaly DROP CONSTRAINT fk_a1426d1153c55f64');
        $this->addSql('DROP INDEX anomaly_starsystem_map_idx');
        $this->addSql('DROP INDEX anomaly_map_idx');
        //BUOY
        $this->addSql('ALTER TABLE stu_buoy DROP CONSTRAINT fk_b6df528953c55f64');
        $this->addSql('ALTER TABLE stu_buoy DROP CONSTRAINT fk_b6df5289b7b1d289');
        $this->addSql('DROP INDEX idx_b6df5289b7b1d289');
        $this->addSql('DROP INDEX idx_b6df528953c55f64');
        //COLONY
        $this->addSql('ALTER TABLE stu_colonies DROP CONSTRAINT fk_d1c60f73496dde10');
        $this->addSql('DROP INDEX uniq_d1c60f73496dde10');
        $this->addSql('DROP INDEX colony_sys_map_idx');
        //FLIGHT_SIG
        $this->addSql('ALTER TABLE stu_flight_sig DROP CONSTRAINT fk_c789cfe1496dde10');
        $this->addSql('ALTER TABLE stu_flight_sig DROP CONSTRAINT fk_c789cfe153c55f64');
        $this->addSql('DROP INDEX flight_sig_starsystem_map_idx');
        $this->addSql('DROP INDEX flight_sig_map_idx');
        //SHIP
        $this->addSql('ALTER TABLE stu_ships DROP CONSTRAINT fk_a560dd56496dde10');
        $this->addSql('ALTER TABLE stu_ships DROP CONSTRAINT fk_a560dd5653c55f64');
        $this->addSql('DROP INDEX ship_starsystem_map_idx');
        $this->addSql('DROP INDEX ship_map_idx');
        //TACHYON_SCAN
        $this->addSql('ALTER TABLE stu_tachyon_scan DROP CONSTRAINT fk_1ed54f94496dde10');
        $this->addSql('ALTER TABLE stu_tachyon_scan DROP CONSTRAINT fk_1ed54f9453c55f64');
        $this->addSql('DROP INDEX tachyon_scan_sysmap_idx');
        $this->addSql('DROP INDEX tachyon_scan_map_idx');
        //WORMHOLE_ENTRY
        $this->addSql('ALTER TABLE stu_wormhole_entry DROP CONSTRAINT fk_d68cf8c9434beaa5');
        $this->addSql('ALTER TABLE stu_wormhole_entry DROP CONSTRAINT fk_d68cf8c953c55f64');
        $this->addSql('DROP INDEX idx_d68cf8c953c55f64');
        $this->addSql('DROP INDEX idx_d68cf8c9434beaa5');
        //FACTION
        $this->addSql('ALTER TABLE stu_factions DROP CONSTRAINT fk_55d1f3cc990ac8f4');
        $this->addSql('DROP INDEX idx_55d1f3cc990ac8f4');
    }

    private function fillLocationReferences(): void
    {
        //SHIP
        $this->addSql('UPDATE stu_ships s
                        SET location_id =
                            (SELECT l.id 
                            FROM stu_location l
                            WHERE (s.starsystem_map_id IS NULL AND s.map_id = l.map_id)
                            OR (s.starsystem_map_id IS NOT NULL AND s.starsystem_map_id = l.starsystem_map_id))');
        $this->addSql('ALTER TABLE stu_ships ALTER location_id SET NOT NULL');
        //ANOMALY
        $this->addSql('UPDATE stu_anomaly a
                        SET location_id =
                            (SELECT l.id 
                            FROM stu_location l
                            WHERE (a.starsystem_map_id IS NULL AND a.map_id = l.map_id)
                            OR (a.starsystem_map_id IS NOT NULL AND a.starsystem_map_id = l.starsystem_map_id))');
        $this->addSql('ALTER TABLE stu_anomaly ALTER location_id SET NOT NULL');
        //BUOY
        $this->addSql('UPDATE stu_buoy b
                        SET location_id =
                            (SELECT l.id 
                            FROM stu_location l
                            WHERE (b.sys_map_id IS NULL AND b.map_id = l.map_id)
                            OR (b.sys_map_id IS NOT NULL AND b.sys_map_id = l.starsystem_map_id))');
        $this->addSql('ALTER TABLE stu_buoy ALTER location_id SET NOT NULL');
        //FLIGHT_SIG
        $this->addSql('UPDATE stu_flight_sig fs
                        SET location_id =
                            (SELECT l.id 
                            FROM stu_location l
                            WHERE (fs.starsystem_map_id IS NULL AND fs.map_id = l.map_id)
                            OR (fs.starsystem_map_id IS NOT NULL AND fs.starsystem_map_id = l.starsystem_map_id))');
        $this->addSql('ALTER TABLE stu_flight_sig ALTER location_id SET NOT NULL');
        //WORMHOLE_ENTRY
        $this->addSql('UPDATE stu_wormhole_entry we
                        SET system_map_id =
                            (SELECT l.id 
                            FROM stu_location l
                            WHERE l.starsystem_map_id = we.system_map_id),
                            map_id =
                            (SELECT l.id 
                            FROM stu_location l
                            WHERE l.map_id = we.map_id)');
        //COLONY
        $this->addSql('UPDATE stu_colonies c
                        SET starsystem_map_id =
                            (SELECT l.id 
                            FROM stu_location l
                            WHERE l.starsystem_map_id = c.starsystem_map_id)');
        //TACHYON_SCAN
        $this->addSql('UPDATE stu_tachyon_scan ts
                        SET location_id =
                            (SELECT l.id 
                            FROM stu_location l
                            WHERE (ts.starsystem_map_id IS NULL AND ts.map_id = l.map_id)
                            OR (ts.starsystem_map_id IS NOT NULL AND ts.starsystem_map_id = l.starsystem_map_id))');
        $this->addSql('ALTER TABLE stu_tachyon_scan ALTER location_id SET NOT NULL');
        //FACTION
        $this->addSql('UPDATE stu_factions f
                        SET start_map_id =
                            (SELECT l.id 
                            FROM stu_location l
                            WHERE l.map_id = f.start_map_id)');
    }

    private function resetMapAndSystemMapReferences(): void
    {
        //WORMHOLE_ENTRY
        $this->addSql('ALTER TABLE stu_wormhole_entry ADD CONSTRAINT fk_d68cf8c9434beaa5 FOREIGN KEY (system_map_id) REFERENCES stu_sys_map (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE stu_wormhole_entry ADD CONSTRAINT fk_d68cf8c953c55f64 FOREIGN KEY (map_id) REFERENCES stu_map (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('CREATE INDEX idx_d68cf8c953c55f64 ON stu_wormhole_entry (map_id)');
        $this->addSql('CREATE INDEX idx_d68cf8c9434beaa5 ON stu_wormhole_entry (system_map_id)');
        //COLONY
        $this->addSql('ALTER TABLE stu_colonies ADD CONSTRAINT fk_d1c60f73496dde10 FOREIGN KEY (starsystem_map_id) REFERENCES stu_sys_map (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('CREATE UNIQUE INDEX uniq_d1c60f73496dde10 ON stu_colonies (starsystem_map_id)');
        $this->addSql('CREATE INDEX colony_sys_map_idx ON stu_colonies (starsystem_map_id)');
        //FACTION
        $this->addSql('ALTER TABLE stu_factions ADD CONSTRAINT fk_55d1f3cc990ac8f4 FOREIGN KEY (start_map_id) REFERENCES stu_map (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('CREATE INDEX idx_55d1f3cc990ac8f4 ON stu_factions (start_map_id)');
    }

    private function removeFieldTypeReferences(): void
    {
        $this->addSql('ALTER TABLE stu_map DROP CONSTRAINT fk_1eef59fd443707b0');
        $this->addSql('DROP INDEX map_field_type_idx');
        $this->addSql('ALTER TABLE stu_map DROP field_id');


        $this->addSql('ALTER TABLE stu_sys_map DROP CONSTRAINT fk_758aa7f1443707b0');
        $this->addSql('DROP INDEX idx_758aa7f1443707b0');
        $this->addSql('ALTER TABLE stu_sys_map DROP field_id');
    }

    private function createLocationInheritance(): void
    {
        //MAP
        $this->addSql('ALTER TABLE stu_map ALTER id DROP IDENTITY');
        $this->addSql('ALTER TABLE stu_map ALTER id TYPE BIGINT');
        $this->addSql('UPDATE stu_map m SET id = 1000000::bigint * (SELECT l.id::bigint FROM stu_location l WHERE l.map_id = m.id)');
        $this->addSql('UPDATE stu_map m SET id = id / 1000000');
        $this->addSql('ALTER TABLE stu_map ALTER id TYPE INT');
        $this->addSql('ALTER TABLE stu_map ADD CONSTRAINT FK_1EEF59FDBF396750 FOREIGN KEY (id) REFERENCES stu_location (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE');
        //SYSTEM_MAP
        $this->addSql('ALTER TABLE stu_sys_map ALTER id DROP IDENTITY');
        $this->addSql('ALTER TABLE stu_sys_map ALTER id TYPE BIGINT');
        $this->addSql('UPDATE stu_sys_map sm SET id = 1000000::bigint * (SELECT l.id::bigint FROM stu_location l WHERE l.starsystem_map_id = sm.id)');
        $this->addSql('UPDATE stu_sys_map m SET id = id / 1000000');
        $this->addSql('ALTER TABLE stu_sys_map ALTER id TYPE INT');
        $this->addSql('ALTER TABLE stu_sys_map ADD CONSTRAINT FK_758AA7F1BF396750 FOREIGN KEY (id) REFERENCES stu_location (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE');
    }

    #[Override]
    public function down(Schema $schema): void
    {
        $this->clearMapAndSystemMapReferences();

        $this->restoreMapTable();
        $this->restoreSystemMapTable();
        $this->restoreAnomalyTable();
        $this->restoreBuoyTable();
        $this->restoreWormholeEntryTable();
        $this->restoreShipTable();
        $this->restoreFlightSigTable();
        $this->restoreTachyonScanTable();
        $this->restoreColonyTable();
        $this->restoreFactionTable();

        //DROP LOCATION TABLE
        $this->addSql('DROP INDEX IDX_E0CD22C3EA6EFDCD');
        $this->addSql('DROP INDEX location_coords_idx');
        $this->addSql('DROP INDEX location_map_idx');
        $this->addSql('DROP INDEX location_system_map_idx');
        $this->addSql('DROP TABLE stu_location');
    }

    public function clearMapAndSystemMapReferences(): void
    {
        //COLONY
        $this->addSql('ALTER TABLE stu_colonies DROP CONSTRAINT fk_d1c60f73496dde10');
        $this->addSql('DROP INDEX uniq_d1c60f73496dde10');
        $this->addSql('DROP INDEX colony_sys_map_idx');
        //WORMHOLE_ENTRY
        $this->addSql('ALTER TABLE stu_wormhole_entry DROP CONSTRAINT fk_d68cf8c9434beaa5');
        $this->addSql('ALTER TABLE stu_wormhole_entry DROP CONSTRAINT fk_d68cf8c953c55f64');
        $this->addSql('DROP INDEX idx_d68cf8c953c55f64');
        $this->addSql('DROP INDEX idx_d68cf8c9434beaa5');
        //FACTION
        $this->addSql('ALTER TABLE stu_factions DROP CONSTRAINT fk_55d1f3cc990ac8f4');
        $this->addSql('DROP INDEX idx_55d1f3cc990ac8f4');
    }

    private function restoreMapTable(): void
    {
        $this->addSql('ALTER TABLE stu_map ADD cx INT DEFAULT NULL');
        $this->addSql('ALTER TABLE stu_map ADD cy INT DEFAULT NULL');
        $this->addSql('ALTER TABLE stu_map ADD layer_id INT DEFAULT NULL');
        $this->addSql('ALTER TABLE stu_map ADD field_id INT DEFAULT NULL');
        $this->addSql('ALTER TABLE stu_map ADD CONSTRAINT fk_1eef59fdea6efdcd FOREIGN KEY (layer_id) REFERENCES stu_layer (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('CREATE INDEX map_layer_idx ON stu_map (layer_id)');
        $this->addSql('CREATE UNIQUE INDEX map_coordinate_idx ON stu_map (layer_id, cx, cy)');
        $this->addSql('CREATE INDEX coordinates_reverse_idx ON stu_map (cy, cx)');
        $this->addSql('CREATE INDEX coordinates_idx ON stu_map (cx, cy)');
        $this->addSql('ALTER TABLE stu_map DROP CONSTRAINT FK_1EEF59FDBF396750');
        $this->addSql('ALTER TABLE stu_map ALTER id TYPE BIGINT');
        $this->addSql('UPDATE stu_map m SET id = 1000000::bigint * (SELECT l.map_id::bigint FROM stu_location l WHERE l.id = m.id)');
        $this->addSql('UPDATE stu_map m SET id = id / 1000000');
        $this->addSql('ALTER TABLE stu_map ALTER id TYPE INT');
        $this->addSql('ALTER TABLE stu_map ALTER id ADD GENERATED BY DEFAULT AS IDENTITY');
        $this->addSql('UPDATE stu_map m set layer_id = (SELECT layer_id FROM stu_location l WHERE l.map_id = m.id)');
        $this->addSql('UPDATE stu_map m set cx = (SELECT l.cx FROM stu_location l WHERE l.map_id = m.id)');
        $this->addSql('UPDATE stu_map m set cy = (SELECT l.cy FROM stu_location l WHERE l.map_id = m.id)');
        $this->addSql('UPDATE stu_map m set field_id = (SELECT l.field_id FROM stu_location l WHERE l.map_id = m.id)');
        $this->addSql('ALTER TABLE stu_map ALTER layer_id SET NOT NULL');
        $this->addSql('ALTER TABLE stu_map ALTER cx SET NOT NULL');
        $this->addSql('ALTER TABLE stu_map ALTER cy SET NOT NULL');
        $this->addSql('ALTER TABLE stu_map ALTER field_id SET NOT NULL');
        $this->addSql('ALTER TABLE stu_map ADD CONSTRAINT fk_1eef59fd443707b0 FOREIGN KEY (field_id) REFERENCES stu_map_ftypes (id) ON UPDATE RESTRICT ON DELETE RESTRICT NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('CREATE INDEX map_field_type_idx ON stu_map (field_id)');
    }

    private function restoreSystemMapTable(): void
    {
        $this->addSql('ALTER TABLE stu_sys_map DROP CONSTRAINT FK_758AA7F1BF396750');
        $this->addSql('ALTER TABLE stu_sys_map ADD field_id INT DEFAULT NULL');
        $this->addSql('ALTER TABLE stu_sys_map ALTER id TYPE BIGINT');
        $this->addSql('UPDATE stu_sys_map sm SET id = 1000000::bigint * (SELECT l.starsystem_map_id::bigint FROM stu_location l WHERE l.id = sm.id)');
        $this->addSql('UPDATE stu_sys_map m SET id = id / 1000000');
        $this->addSql('ALTER TABLE stu_sys_map ALTER id TYPE INT');
        $this->addSql('ALTER TABLE stu_sys_map ALTER id ADD GENERATED BY DEFAULT AS IDENTITY');
        $this->addSql('UPDATE stu_sys_map sm set field_id = (SELECT l.field_id FROM stu_location l WHERE l.starsystem_map_id = sm.id)');
        $this->addSql('ALTER TABLE stu_sys_map ALTER field_id SET NOT NULL');
        $this->addSql('ALTER TABLE stu_sys_map ADD CONSTRAINT fk_758aa7f1443707b0 FOREIGN KEY (field_id) REFERENCES stu_map_ftypes (id) ON UPDATE RESTRICT ON DELETE RESTRICT NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('CREATE INDEX idx_758aa7f1443707b0 ON stu_sys_map (field_id)');
    }

    private function restoreAnomalyTable(): void
    {
        $this->addSql('ALTER TABLE stu_anomaly DROP CONSTRAINT FK_A1426D1164D218E');
        $this->addSql('DROP INDEX IDX_A1426D1164D218E');
        $this->addSql('ALTER TABLE stu_anomaly DROP location_id');
        $this->addSql('ALTER TABLE stu_anomaly ADD CONSTRAINT fk_a1426d11496dde10 FOREIGN KEY (starsystem_map_id) REFERENCES stu_sys_map (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE stu_anomaly ADD CONSTRAINT fk_a1426d1153c55f64 FOREIGN KEY (map_id) REFERENCES stu_map (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('CREATE INDEX anomaly_starsystem_map_idx ON stu_anomaly (starsystem_map_id)');
        $this->addSql('CREATE INDEX anomaly_map_idx ON stu_anomaly (map_id)');
    }

    private function restoreBuoyTable(): void
    {
        $this->addSql('ALTER TABLE stu_buoy DROP CONSTRAINT FK_B6DF528964D218E');
        $this->addSql('DROP INDEX IDX_B6DF528964D218E');
        $this->addSql('ALTER TABLE stu_buoy DROP location_id');
        $this->addSql('ALTER TABLE stu_buoy ADD CONSTRAINT fk_b6df528953c55f64 FOREIGN KEY (map_id) REFERENCES stu_map (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE stu_buoy ADD CONSTRAINT fk_b6df5289b7b1d289 FOREIGN KEY (sys_map_id) REFERENCES stu_sys_map (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('CREATE INDEX idx_b6df5289b7b1d289 ON stu_buoy (sys_map_id)');
        $this->addSql('CREATE INDEX idx_b6df528953c55f64 ON stu_buoy (map_id)');
    }

    private function restoreWormholeEntryTable(): void
    {
        $this->addSql('UPDATE stu_wormhole_entry we
                        SET system_map_id =
                            (SELECT l.starsystem_map_id
                            FROM stu_location l
                            WHERE l.id = we.system_map_id),
                            map_id =
                            (SELECT l.map_id 
                            FROM stu_location l
                            WHERE l.id = we.map_id)');

        $this->addSql('ALTER TABLE stu_wormhole_entry ADD CONSTRAINT fk_d68cf8c9434beaa5 FOREIGN KEY (system_map_id) REFERENCES stu_sys_map (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE stu_wormhole_entry ADD CONSTRAINT fk_d68cf8c953c55f64 FOREIGN KEY (map_id) REFERENCES stu_map (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('CREATE INDEX idx_d68cf8c953c55f64 ON stu_wormhole_entry (map_id)');
        $this->addSql('CREATE INDEX idx_d68cf8c9434beaa5 ON stu_wormhole_entry (system_map_id)');
    }

    private function restoreShipTable(): void
    {
        $this->addSql('ALTER TABLE stu_ships DROP CONSTRAINT FK_A560DD5664D218E');
        $this->addSql('DROP INDEX ship_location_idx');
        $this->addSql('ALTER TABLE stu_ships DROP location_id');
        $this->addSql('ALTER TABLE stu_ships ADD CONSTRAINT fk_a560dd56496dde10 FOREIGN KEY (starsystem_map_id) REFERENCES stu_sys_map (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE stu_ships ADD CONSTRAINT fk_a560dd5653c55f64 FOREIGN KEY (map_id) REFERENCES stu_map (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('CREATE INDEX ship_starsystem_map_idx ON stu_ships (starsystem_map_id)');
        $this->addSql('CREATE INDEX ship_map_idx ON stu_ships (map_id)');
    }

    private function restoreFlightSigTable(): void
    {
        $this->addSql('ALTER TABLE stu_flight_sig DROP CONSTRAINT FK_C789CFE164D218E');
        $this->addSql('DROP INDEX IDX_C789CFE164D218E');
        $this->addSql('ALTER TABLE stu_flight_sig DROP location_id');
        $this->addSql('ALTER TABLE stu_flight_sig ADD CONSTRAINT fk_c789cfe1496dde10 FOREIGN KEY (starsystem_map_id) REFERENCES stu_sys_map (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE stu_flight_sig ADD CONSTRAINT fk_c789cfe153c55f64 FOREIGN KEY (map_id) REFERENCES stu_map (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('CREATE INDEX flight_sig_starsystem_map_idx ON stu_flight_sig (starsystem_map_id)');
        $this->addSql('CREATE INDEX flight_sig_map_idx ON stu_flight_sig (map_id)');
    }

    private function restoreTachyonScanTable(): void
    {
        $this->addSql('ALTER TABLE stu_tachyon_scan DROP CONSTRAINT FK_1ED54F9464D218E');
        $this->addSql('DROP INDEX IDX_1ED54F9464D218E');
        $this->addSql('ALTER TABLE stu_tachyon_scan DROP location_id');
        $this->addSql('ALTER TABLE stu_tachyon_scan ADD CONSTRAINT fk_1ed54f94496dde10 FOREIGN KEY (starsystem_map_id) REFERENCES stu_sys_map (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE stu_tachyon_scan ADD CONSTRAINT fk_1ed54f9453c55f64 FOREIGN KEY (map_id) REFERENCES stu_map (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('CREATE INDEX tachyon_scan_sysmap_idx ON stu_tachyon_scan (starsystem_map_id)');
        $this->addSql('CREATE INDEX tachyon_scan_map_idx ON stu_tachyon_scan (map_id)');
    }

    private function restoreColonyTable(): void
    {
        $this->addSql('UPDATE stu_colonies c
                        SET starsystem_map_id =
                            (SELECT l.starsystem_map_id 
                            FROM stu_location l
                            WHERE l.id = c.starsystem_map_id)');
        $this->addSql('ALTER TABLE stu_colonies ADD CONSTRAINT fk_d1c60f73496dde10 FOREIGN KEY (starsystem_map_id) REFERENCES stu_sys_map (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('CREATE UNIQUE INDEX uniq_d1c60f73496dde10 ON stu_colonies (starsystem_map_id)');
        $this->addSql('CREATE INDEX colony_sys_map_idx ON stu_colonies (starsystem_map_id)');
    }

    private function restoreFactionTable(): void
    {
        $this->addSql('UPDATE stu_factions f
                        SET start_map_id =
                            (SELECT l.map_id 
                            FROM stu_location l
                            WHERE l.id = f.start_map_id)');
        $this->addSql('ALTER TABLE stu_factions ADD CONSTRAINT fk_55d1f3cc990ac8f4 FOREIGN KEY (start_map_id) REFERENCES stu_map (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('CREATE INDEX idx_55d1f3cc990ac8f4 ON stu_factions (start_map_id)');
    }
}
